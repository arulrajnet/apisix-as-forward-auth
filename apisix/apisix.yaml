global_rules:
  - id: global-rules
    plugins:
      request-id:
        include_in_response: true
      redirect:
        http_to_https: true
        ret_code: 301

routes:

  - uris:
      - /__auth/*
      - /__auth/
    id: root
    hosts:
      - "${{SERVER_DOMAIN}}"
    methods:
      - GET
      - HEAD
      - POST
      - PUT
      - DELETE
    priority: 5
    enable_websocket: true
    plugins:
      openid-connect:
        bearer_only: false
        client_id: ${{IDP_CLIENT_ID}}
        client_secret: ${{IDP_CLIENT_SECRET}}
        discovery: "https://${{IDP_DOMAIN}}/.well-known/openid-configuration"
        introspection_endpoint_auth_method: "client_secret_post"
        logout_path: "/__auth/logout"
        redirect_uri: "https://${{SERVER_DOMAIN}}/__auth/callback"
        post_logout_redirect_uri: "https://${{SERVER_DOMAIN}}/"
        scope: "openid profile email"
        set_refresh_token_header: true
        authorization_params:
          response_type: "code"
          audience: ${{IDP_AUDIENCE}}
        session:
          cookie:
            lifetime: 86400 #(integer, default: 3600): Lifetime of the session cookie in seconds.
            domain: "${{SERVER_DOMAIN}}"
            path: "/"
            secure: "on"
            http_only: "on"
            same_site: "Lax"  # Add SameSite attribute for better compatibility
          secret: ${{SESSION_SECRET}}
      mocking:
        response_status: 200
        response_example: "Authenticated.\n"
      serverless-post-function:
        phase: header_filter
        functions:
          - |
            return function(conf, ctx)
              local core = require('apisix.core')
              local ngx = ngx

              -- Get the X-Userinfo header set by OpenID Connect plugin
              local userinfo_header = core.request.header(ctx, 'X-Userinfo')

              if userinfo_header then
                -- Decode base64
                local userinfo_json = ngx.decode_base64(userinfo_header)
                if userinfo_json then
                  -- Parse JSON
                  local userinfo = core.json.decode(userinfo_json)
                  if userinfo then
                    -- Set individual response headers
                    core.response.set_header('X-Auth-Request-User-Id', userinfo.sub or '')
                    core.response.set_header('X-Auth-Request-Email', userinfo.email or '')
                    core.response.set_header('X-Auth-Request-Name', userinfo.name or '')
                  end
                end
              end

              -- Set response headers from request headers

              local access_token = core.request.header(ctx, 'X-Access-Token')
              if access_token then
                core.response.set_header('X-Auth-Request-Access-Token', access_token)
              end

              local id_token = core.request.header(ctx, 'X-ID-Token')
              if id_token then
                core.response.set_header('X-Auth-Request-ID-Token', id_token)
              end

              local refresh_token = core.request.header(ctx, 'X-Refresh-Token')
              if refresh_token then
                core.response.set_header('X-Auth-Request-Refresh-Token', refresh_token)
              end

              local userinfo_raw = core.request.header(ctx, 'X-Userinfo')
              if userinfo_raw then
                core.response.set_header('X-Auth-Request-Userinfo', userinfo_raw)
              end
            end
    upstream:
      type: roundrobin
      nodes:
        - host: 127.0.0.1
          port: 65535
          weight: 1

  - uris:
      - /callback
    id: auth-callback
    service_id: auth
    priority: 11
    hosts:
      - "${{SERVER_DOMAIN}}"
    plugins:
      proxy-rewrite:
        uri: "/callback"

  - uris:
      - /logout
    id: auth-logout
    service_id: auth
    hosts:
      - "${{SERVER_DOMAIN}}"
    plugins:
      proxy-rewrite:
        uri: "/logout"

  - uris:
      - /web1
      - /web1/*
    id: web1-route
    service_id: web1
    hosts:
      - "${{SERVER_DOMAIN}}"
    plugins:
      forward-auth:
        uri: "https://localhost:9443/__auth/"
        ssl_verify: false
        request_headers:
          - Cookie
          - Host
          - User-Agent
        upstream_headers:
          - X-Auth-Request-User-Id
          - X-Auth-Request-Email
          - X-Auth-Request-Name
          - X-Auth-Request-Access-Token
          - X-Auth-Request-ID-Token
          - X-Auth-Request-Userinfo
          - X-Auth-Request-Refresh-Token
        client_headers:
          - Location
          - Content-Type
          - Set-Cookie

  - uris:
      - /web2
      - /web2/*
    id: web2-route
    service_id: web2
    hosts:
      - "${{SERVER_DOMAIN}}"
    plugins:
      forward-auth:
        uri: "https://localhost:9443/__auth/"
        ssl_verify: false
        request_headers:
          - Cookie
          - Host
          - User-Agent
        upstream_headers:
          - X-Auth-Request-User-Id
          - X-Auth-Request-Email
          - X-Auth-Request-Name
          - X-Auth-Request-Access-Token
          - X-Auth-Request-ID-Token
          - X-Auth-Request-Userinfo
          - X-Auth-Request-Refresh-Token
        client_headers:
          - Location
          - Content-Type
          - Set-Cookie

  - uris:
      - /
      - /*
    id: root-route
    service_id: web1
    hosts:
      - "${{SERVER_DOMAIN}}"
    enable_websocket: true
    plugins:
      forward-auth:
        uri: "https://localhost:9443/__auth/"
        ssl_verify: false
        request_headers:
          - Cookie
          - Host
          - User-Agent
        upstream_headers:
          - X-Auth-Request-User-Id
          - X-Auth-Request-Email
          - X-Auth-Request-Name
          - X-Auth-Request-Access-Token
          - X-Auth-Request-ID-Token
          - X-Auth-Request-Userinfo
          - X-Auth-Request-Refresh-Token
        client_headers:
          - Location
          - Content-Type
          - Set-Cookie

  - uris:
      - /whoami
      - /whoami/*
    id: whoami-route
    service_id: whoami
    hosts:
      - "${{SERVER_DOMAIN}}"
    plugins:
      forward-auth:
        uri: "https://localhost:9443/__auth/"
        ssl_verify: false
        request_headers:
          - Cookie
          - Host
          - User-Agent
        upstream_headers:
          - X-Auth-Request-User-Id
          - X-Auth-Request-Email
          - X-Auth-Request-Name
          - X-Auth-Request-Access-Token
          - X-Auth-Request-ID-Token
          - X-Auth-Request-Userinfo
          - X-Auth-Request-Refresh-Token
        client_headers:
          - Location
          - Content-Type
          - Set-Cookie

services:
  - id: auth
    upstream:
      nodes:
        - host: auth_apisix
          port: 9080
          weight: 1
      type: roundrobin

  - id: web1
    upstream:
      nodes:
        - host: web1
          port: 80
          weight: 1
      type: roundrobin

  - id: web2
    upstream:
      nodes:
        - host: web2
          port: 80
          weight: 1
      type: roundrobin

  - id: whoami
    upstream:
      nodes:
        - host: whoami
          port: 80
          weight: 1
      type: roundrobin

ssls:
  - cert: |
      -----BEGIN CERTIFICATE-----
      MIIBfTCCASOgAwIBAgIUXLJHNck6V/e8Mj6LjpdIheLtDiIwCgYIKoZIzj0EAwIw
      FDESMBAGA1UEAwwJbG9jYWxob3N0MB4XDTI1MTAyNzA3NTkxOVoXDTI2MTAyNzA3
      NTkxOVowFDESMBAGA1UEAwwJbG9jYWxob3N0MFkwEwYHKoZIzj0CAQYIKoZIzj0D
      AQcDQgAEjnsocl7a6sFt+TJIEXXDPO8oyfR1dto8BShN3y2P/EHQUKJWDAhCHLSq
      FTLP13e3UoonKZItt6545stRSTiJ6aNTMFEwHQYDVR0OBBYEFJT4fCySk774RWWA
      szTt1hjCOCoOMB8GA1UdIwQYMBaAFJT4fCySk774RWWAszTt1hjCOCoOMA8GA1Ud
      EwEB/wQFMAMBAf8wCgYIKoZIzj0EAwIDSAAwRQIhANbwpAQLizvnfNkl49PDJp5L
      FFmmPK67RK3KumoQca31AiAsD2g7Euu6F7kXFhkQH3ct6LWXcfz0FUxAbNx3ZZ8K
      vA==
      -----END CERTIFICATE-----
    key: |
      -----BEGIN PRIVATE KEY-----
      MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgD8uiahn+45Tj2JLO
      2jb8WNQ6yiuUSKrPEFU+RxJUS4+hRANCAASOeyhyXtrqwW35MkgRdcM87yjJ9HV2
      2jwFKE3fLY/8QdBQolYMCEIctKoVMs/Xd7dSiicpki23rnjmy1FJOInp
      -----END PRIVATE KEY-----
    snis:
      - ${{SERVER_DOMAIN}}
      - "*.${{SERVER_DOMAIN}}"

#END
